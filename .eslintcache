[{"/Users/justincho/Desktop/topthreedeploy/src/index.js":"1","/Users/justincho/Desktop/topthreedeploy/src/App.js":"2","/Users/justincho/Desktop/topthreedeploy/src/store.js":"3","/Users/justincho/Desktop/topthreedeploy/src/containers/Login.js":"4","/Users/justincho/Desktop/topthreedeploy/src/containers/Home.js":"5","/Users/justincho/Desktop/topthreedeploy/src/containers/Signup.js":"6","/Users/justincho/Desktop/topthreedeploy/src/containers/Activate.js":"7","/Users/justincho/Desktop/topthreedeploy/src/containers/ResetPasswordConfirm.js":"8","/Users/justincho/Desktop/topthreedeploy/src/containers/ResetPassword.js":"9","/Users/justincho/Desktop/topthreedeploy/src/containers/UserLists.js":"10","/Users/justincho/Desktop/topthreedeploy/src/containers/ListDetail.js":"11","/Users/justincho/Desktop/topthreedeploy/src/containers/CreateList.js":"12","/Users/justincho/Desktop/topthreedeploy/src/containers/Explore.js":"13","/Users/justincho/Desktop/topthreedeploy/src/containers/EditListPage.js":"14","/Users/justincho/Desktop/topthreedeploy/src/containers/DeleteAccountPage.js":"15","/Users/justincho/Desktop/topthreedeploy/src/hoc/Layout.js":"16","/Users/justincho/Desktop/topthreedeploy/src/actions/lists.js":"17","/Users/justincho/Desktop/topthreedeploy/src/actions/auth.js":"18","/Users/justincho/Desktop/topthreedeploy/src/components/Navbar.js":"19","/Users/justincho/Desktop/topthreedeploy/src/actions/types.js":"20","/Users/justincho/Desktop/topthreedeploy/src/reducers/index.js":"21","/Users/justincho/Desktop/topthreedeploy/src/reducers/lists.js":"22","/Users/justincho/Desktop/topthreedeploy/src/reducers/auth.js":"23"},{"size":199,"mtime":1611189703437,"results":"24","hashOfConfig":"25"},{"size":2167,"mtime":1611189703406,"results":"26","hashOfConfig":"25"},{"size":388,"mtime":1611189703464,"results":"27","hashOfConfig":"25"},{"size":3394,"mtime":1611189703319,"results":"28","hashOfConfig":"25"},{"size":1457,"mtime":1611189703318,"results":"29","hashOfConfig":"25"},{"size":5549,"mtime":1611189703321,"results":"30","hashOfConfig":"25"},{"size":1208,"mtime":1611189703315,"results":"31","hashOfConfig":"25"},{"size":2151,"mtime":1611189703320,"results":"32","hashOfConfig":"25"},{"size":1446,"mtime":1611189703320,"results":"33","hashOfConfig":"25"},{"size":1671,"mtime":1611189703321,"results":"34","hashOfConfig":"25"},{"size":4414,"mtime":1611189703318,"results":"35","hashOfConfig":"25"},{"size":5572,"mtime":1611189703315,"results":"36","hashOfConfig":"25"},{"size":1688,"mtime":1611189703317,"results":"37","hashOfConfig":"25"},{"size":6837,"mtime":1611189703317,"results":"38","hashOfConfig":"25"},{"size":2031,"mtime":1611189703316,"results":"39","hashOfConfig":"25"},{"size":1105,"mtime":1611189703351,"results":"40","hashOfConfig":"25"},{"size":4030,"mtime":1611189703267,"results":"41","hashOfConfig":"25"},{"size":6786,"mtime":1611189703267,"results":"42","hashOfConfig":"25"},{"size":3057,"mtime":1611189703291,"results":"43","hashOfConfig":"25"},{"size":1620,"mtime":1611189703268,"results":"44","hashOfConfig":"25"},{"size":154,"mtime":1611189703375,"results":"45","hashOfConfig":"25"},{"size":1711,"mtime":1611189703380,"results":"46","hashOfConfig":"25"},{"size":3698,"mtime":1611189703374,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"11cnojx",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"50"},"/Users/justincho/Desktop/topthreedeploy/src/index.js",[],["111","112"],"/Users/justincho/Desktop/topthreedeploy/src/App.js",["113"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport Activate from './containers/Activate';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\nimport CreateList from './containers/CreateList';\nimport UserLists from './containers/UserLists';\nimport ListDetail from './containers/ListDetail';\nimport EditListPage from './containers/EditListPage';\nimport Explore from './containers/Explore';\nimport DeleteAccountPage from './containers/DeleteAccountPage';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Layout from './hoc/Layout';\nconst App = () => (\n    <Provider store={store}>\n        <Router>\n            <Layout>\n                <Switch>\n                    <Route exact path='/' component={Home}></Route>\n                    <Route exact path='/login' component={Login}></Route>\n                    <Route exact path='/signup' component={Signup}></Route>\n                    <Route exact path='/activate/:uid/:token' component={Activate}></Route>\n                    <Route exact path='/password-reset' component={ResetPassword}></Route>\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm}></Route>\n                    <Route exact path='/create-list' component={CreateList}></Route>\n                    <Route exact path='/my-lists' component={UserLists}></Route>\n                    <Route exact path='/list-detail/:id' component={ListDetail}></Route>\n                    <Route exact path='/list-edit/:id' component={EditListPage}></Route>\n                    <Route exact path='/explore' component={Explore}></Route>\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>\n);\n\nexport default App;\n\n// 'PASSWORD_RESET_CONFIRM_URL': 'password/reset/confirm/{uid}/{token}',\n//     'USERNAME_RESET_CONFIRM_URL': 'email/reset/confirm/{uid}/{token}',\n//     'ACTIVATION_URL': 'activate/{uid}/{token}',","/Users/justincho/Desktop/topthreedeploy/src/store.js",[],"/Users/justincho/Desktop/topthreedeploy/src/containers/Login.js",["114","115"],"import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\nimport axios from 'axios';\n\nconst Login = ({ login, isAuthenticated, error }) => {\n    const [formData, setFormData] = useState({\n        'email': '',\n        'password':''\n    });\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n    const onSubmit = e => {\n        e.preventDefault();\n\n        login(email, password) //function from actions\n    }; \n\n    const continueWithGoogle = async () => {\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=http://localhost:8000`);\n\n            window.location.replace(res.data.authorization_url);\n            \n        } catch (err) {\n\n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to='/'/>\n    }\n\n    return (\n        <div className='container mt-5'>\n            {\n                error && (error == \"Could not log in. Please check credentials and try again.\" || error == \"An account already exists with this email. Please Log in.\" || \"You've successfully created an account! Please check your email to activate your account to log in.\") ? (\n                    <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n                        <strong>Authentication Error: </strong> {error}\n                        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                ): null\n            }\n            <h1>Sign In</h1>\n            <p>Sign in to your account</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='password'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Login</button>\n            </form>\n            <button className='btn btn-danger mt-3' onClick={continueWithGoogle}>Continue With Google</button>\n            <p className='mt-3'>\n                Don't have an account? <Link to='/signup'>Sign Up.</Link>\n            </p>\n            <p className='mt-3'>\n                Forgot your Password? <Link to='/password-reset'>Reset Password.</Link>\n            </p>\n        </div>\n    )\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.auth.notification\n})\n\nexport default connect(mapStateToProps, {login})(Login);","/Users/justincho/Desktop/topthreedeploy/src/containers/Home.js",["116","117","118","119"],"import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\nimport axios from 'axios';\n\nconst Home = ({isAuthenticated, user, login}) => {\n\n    console.log(process.env.REACT_APP_API_URL);\n    const sampleLogin = () => {\n        login(\"topthreesampleuser@gmail.com\", \"testpass123\");\n    }\n\n    return (\n        <div>\n            <div class='jumbotron mt-5'>\n                <h1 class='display-4'>TopThree</h1>\n                <p class='lead mt-4'>What's your top 3?</p>\n                <hr class='my-4'/>\n                { !isAuthenticated ?\n                    (\n                        <>\n                            <Link to='/login' class='lead'>\n                                <a class=\"btn btn-primary btn-lg\" href='/login' role='button'>Log In</a>\n                            </Link>\n                            <div className='mt-4'>\n                            <button className='btn btn-info' onClick={() => {sampleLogin()}}>Sample User Log In</button>\n                            </div>\n                        </>\n                    )\n                    :\n                        null\n                }\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n})\n\nexport default connect(mapStateToProps, {login})(Home);","/Users/justincho/Desktop/topthreedeploy/src/containers/Signup.js",["120"],"import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../actions/auth';\nimport axios from 'axios';\n\nconst Signup = ({ signup, isAuthenticated, error }) => {\n    const [passwordErrors, setPasswordErrors] = useState([]);\n    const [accountCreated, setAccountCreated] = useState(false);\n    const [formData, setFormData] = useState({\n        'first_name': '',\n        'last_name':'',\n        'email': '',\n        'password':'',\n        're_password':''\n    });\n\n    const { first_name, last_name, email, password, re_password } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n    const onSubmit = e => {\n        e.preventDefault();\n        if (password !== re_password || password.length < 7) {\n            setPasswordErrors(prevState => ([...prevState, 'Please check your passwords. They must match and be over 6 characters.']))\n        } else {\n            console.log('signingup..')\n            signup(first_name, last_name, email, password, re_password) \n\n            if (!error) {\n                setAccountCreated(true);\n            }\n        };\n    } \n\n    const continueWithGoogle = async () => {\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=http://localhost:8000`);\n\n            window.location.replace(res.data.authorization_url);\n            \n        } catch (err) {\n\n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to='/'/>\n    }\n    \n    if (accountCreated) {\n        return <Redirect to='/login'/>\n    }\n\n    return (\n        <div className='container mt-5'>\n            {\n                passwordErrors.map(err => (\n                    <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n                        <strong>Account Creation Error: </strong> {err}\n                        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\" class=\"text-danger\">&times;</span>\n                        </button>\n                    </div>\n                ))\n\n               \n            }\n            {error && error == \"An account already exists with this email. Please Log in.\" ? (\n                <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n                    <strong>Account Creation Error: </strong> {error}\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>                 \n            ) : null}\n\n            <h1>Sign Up</h1>\n            <p>Create Your Account</p>\n            <form onSubmit={e => {onSubmit(e)}}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='First Name'\n                        name='first_name'\n                        value={first_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>        \n                 <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='Last Name'\n                        name='last_name'\n                        value={last_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>               \n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email*'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password*'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm password*'\n                        name='re_password'\n                        value={re_password}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Sign Up</button>\n            </form>\n            <button className='btn btn-danger mt-3' onClick={continueWithGoogle}>Continue With Google</button>\n            <p className='mt-3'>\n                Already have an account? <Link to='/login'>Signup</Link>\n            </p>\n        </div>\n    )\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.auth.notification\n})\n\nexport default connect(mapStateToProps, {signup})(Signup);","/Users/justincho/Desktop/topthreedeploy/src/containers/Activate.js",["121"],"import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { verify } from '../actions/auth';\n\n\nconst Activate = ({ match ,verify }) => {\n    const [verified, setVerified] = useState(false);\n\n    const verify_account = (e) => {\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        verify(uid, token); \n        setVerified(true);//function from actions\n    } \n\n    if (verified) {\n        return <Redirect to='/'/>\n    }\n\n    return (\n        <div className='container mt-5'>\n           <div className='d-flex flex-column justify-content-center align-items-center'\n           style={{ marginTop: '200px'}}>\n               <h1>Verify your Account:</h1>\n               <button\n                onClick={verify_account}\n                style={{ marginTop: \"50px\"}}\n                type='button'\n                className='btn btn-primary'\n               >\n                   Verify\n               </button>\n           </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {verify})(Activate);","/Users/justincho/Desktop/topthreedeploy/src/containers/ResetPasswordConfirm.js",[],"/Users/justincho/Desktop/topthreedeploy/src/containers/ResetPassword.js",[],"/Users/justincho/Desktop/topthreedeploy/src/containers/UserLists.js",["122","123","124"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated , load_user } from '../actions/auth.js';\n\nconst UserLists = ({ checkAuthenticated, load_user, isAuthenticated, user }) => {\n    const [lists, setLists] = useState([]);\n    const [selectedUserList, setSelectedUserList] = useState({})\n\n    useEffect(() => {\n        console.log('INSIDE USEREFFECT')\n        const fetchData = async () => {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\n                    'Accept': 'application/json'\n                }\n            };\n            try {\n                const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/lists/user/${user.id}/`, config);\n\n                setLists(res.data);\n                console.log(res.data);\n            } catch (err) {\n\n            }\n        }\n\n        checkAuthenticated();\n        fetchData();\n    }, [user]);\n\n    return ( \n        <div className='container mt-4 mx-auto'>\n            <h1>Your Lists</h1>\n           <ul class='list-group list-group-flush w-50 p-3'>\n                {lists.map(list => (\n                    <a href={'/list-detail/' + list.id} className='list-group-item list-group-item-action'>{list.list_title}</a>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n})\n\n\nexport default connect(mapStateToProps, {checkAuthenticated, load_user})(UserLists);","/Users/justincho/Desktop/topthreedeploy/src/containers/ListDetail.js",["125","126","127","128"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { checkAuthenticated , load_user } from '../actions/auth.js';\nimport { delete_list, load_list_owner } from '../actions/lists.js';\n\nconst ListDetail = (props) => {\n    const [list, setList] = useState();\n    const [listDeleted, setListDeleted] = useState(false)\n    console.log(props.match.params.id)\n\n    useEffect(() => {\n        console.log('listdetailusereffect')\n        const fetchData = async () => {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\n                    'Accept': 'application/json'\n                }\n            };\n            try {\n                const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/lists/${props.match.params.id}/`, config);\n\n                setList(res.data);\n                console.log(res.data);\n            } catch (err) {\n\n            }\n        }\n\n        props.checkAuthenticated();\n        fetchData();\n    }, []);\n\n    useEffect(()=>{\n        if (list) {\n            props.load_list_owner(list.list_author)\n        }\n    }, [list])\n\n    const handleDelete = (list_id) => {\n        props.delete_list(list_id);\n        setListDeleted(true);\n    }\n\n    if (listDeleted) {\n        return <Redirect to='/my-lists'/>\n    }\n\n    return ( \n        <div className='container mt-5'>\n        { list && props.user && props.listOwner ?\n            (\n                <div class=\"row justify-content-center\">\n                     <h3>{list.list_title} by {props.listOwner.first_name} {props.listOwner.last_name} </h3>\n                    <div class=\"col-12 mt-5\">\n                        <div class=\"list-group mt-5\" id=\"list-tab\" role=\"tablist\">\n                        <a class=\"list-group-item list-group-item-action active\" id=\"list-home-list\" data-toggle=\"list\" href=\"#list-home\" role=\"tab\" aria-controls=\"home\">{list.list_entry_1}</a>\n                        <a class=\"list-group-item list-group-item-action\" id=\"list-profile-list\" data-toggle=\"list\" href=\"#list-profile\" role=\"tab\" aria-controls=\"profile\">{list.list_entry_2}</a>\n                        <a class=\"list-group-item list-group-item-action\" id=\"list-messages-list\" data-toggle=\"list\" href=\"#list-messages\" role=\"tab\" aria-controls=\"messages\">{list.list_entry_3}</a>\n                        </div>\n                    </div>\n                    <div class=\"col-12 mt-5 ml-1\">\n                        <div class=\"tab-content\" id=\"nav-tabContent\">\n                        <div class=\"tab-pane fade show active\" id=\"list-home\" role=\"tabpanel\" aria-labelledby=\"list-home-list\">{list.list_entry_1_desc}</div>\n                        <div class=\"tab-pane fade\" id=\"list-profile\" role=\"tabpanel\" aria-labelledby=\"list-profile-list\">{list.list_entry_2_desc}</div>\n                        <div class=\"tab-pane fade\" id=\"list-messages\" role=\"tabpanel\" aria-labelledby=\"list-messages-list\">{list.list_entry_3_desc}</div>\n                        </div>\n                    </div>\n                    <div className='col-12 mt-4'>\n                        <blockquote>\n                        <footer class=\"blockquote-footer\">published on {list.date.slice(0, 9)} <cite title=\"Source Title\"></cite></footer>\n                        </blockquote>\n                    </div>\n                    {\n\n                        props.user.id == list.list_author ? (\n                            <>\n                            <div className=\"mt-5\">\n                                <button className=\"btn btn-danger mr-2\" onClick={() => {handleDelete(list.id)}}>Delete List</button>\n                                <Link to={'/list-edit/' + list.id}><button className=\"btn btn-primary ml-2\">Edit List</button></Link>\n                            </div>\n                            </>\n                        ) : null \n                    }\n                </div>\n            ):\n\n            null\n            \n        }\n         </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user,\n    listOwner: state.lists.listOwner\n})\n\n\nexport default connect(mapStateToProps, {checkAuthenticated, delete_list, load_list_owner})(ListDetail);","/Users/justincho/Desktop/topthreedeploy/src/containers/CreateList.js",["129"],"import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { create_list } from '../actions/lists';\nimport { checkAuthenticated, load_user } from '../actions/auth';\n\nconst CreateList = ({ isAuthenticated, user, create_list, checkAuthenticated, load_user }) => {\n    const [formData, setFormData] = useState({\n        'list_title':'',\n        'list_entry_1': '',\n        'list_entry_1_desc': '',\n        'list_entry_2': '',\n        'list_entry_2_desc': '',\n        'list_entry_3': '',\n        'list_entry_3_desc': ''\n    })\n    const [listCreated, setListCreated] = useState(false);\n\n    const { \n        list_title, \n        list_entry_1, \n        list_entry_1_desc,\n        list_entry_2,\n        list_entry_2_desc,\n        list_entry_3,\n        list_entry_3_desc } = formData\n\n    useEffect(() => {\n        checkAuthenticated();\n        load_user();\n        if (!isAuthenticated) {\n            return <Redirect to='/login'/>\n        }\n        }, [])\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n    \n    const onSubmit = e => {\n        e.preventDefault();\n        console.log(user.id)\n        const list_author = user.id\n\n        create_list(list_title, list_entry_1,list_entry_1_desc, list_entry_2, list_entry_2_desc, list_entry_3, list_entry_3_desc, list_author);\n        setListCreated(true);\n        \n    }\n\n    if (listCreated) {\n        return <Redirect to='/my-lists'/>\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Make a List!</h1>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='List Title*'\n                        name='list_title'\n                        value={list_title}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-row'>\n                    <div className='form-group col-md-6'>\n                        <input\n                            className='form-control'\n                            type='text'\n                            placeholder='Enter Your First Choice*'\n                            name='list_entry_1'\n                            value={list_entry_1}\n                            onChange={e => onChange(e)}\n                            required\n                        />\n                    </div>\n                        <div className='form-group col-md-6'>\n                        <textarea\n                            className='form-control'\n                            type='text'\n                            placeholder='Description 1'\n                            name='list_entry_1_desc'\n                            value={list_entry_1_desc}\n                            onChange={e => onChange(e)}\n                          \n                        />\n                    </div>\n                 </div>\n                 <div className='form-row'>\n                    <div className='form-group col-md-6'>\n                        <input\n                            className='form-control'\n                            type='text'\n                            placeholder='Enter Your Second Choice*'\n                            name='list_entry_2'\n                            value={list_entry_2}\n                            onChange={e => onChange(e)}\n                            required\n                        />\n                    </div>\n                        <div className='form-group col-md-6'>\n                        <textarea\n                            className='form-control'\n                            type='text'\n                            placeholder='Description 2'\n                            name='list_entry_2_desc'\n                            value={list_entry_2_desc}\n                            onChange={e => onChange(e)}\n                          \n                        />\n                    </div>\n                </div>\n                          <div className='form-row'>\n                    <div className='form-group col-md-6'>\n                        <input\n                            className='form-control'\n                            type='text'\n                            placeholder='Enter Your Third Choice*'\n                            name='list_entry_3'\n                            value={list_entry_3}\n                            onChange={e => onChange(e)}\n                            required\n                        />\n                    </div>\n                        <div className='form-group col-md-6'>\n                        <textarea\n                            className='form-control'\n                            type='text'\n                            placeholder='Description 3'\n                            name='list_entry_3_desc'\n                            value={list_entry_3_desc}\n                            onChange={e => onChange(e)}\n                    \n                        />\n                    </div>\n                </div>\n\n                <button className='btn btn-primary' type='submit'>Create List</button>\n            </form>\n      \n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {checkAuthenticated, load_user, create_list})(CreateList);","/Users/justincho/Desktop/topthreedeploy/src/containers/Explore.js",["130"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated , load_user } from '../actions/auth.js';\n\nconst Explore = ({ checkAuthenticated, load_user, isAuthenticated, user }) => {\n    const [lists, setLists] = useState([]);\n\n    useEffect(() => {\n        console.log('INSIDE USEREFFECT')\n        const fetchData = async () => {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\n                    'Accept': 'application/json'\n                }\n            };\n            try {\n                const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/lists/`, config);\n\n                setLists(res.data);\n                console.log(res.data);\n            } catch (err) {\n\n            }\n        }\n\n        checkAuthenticated();\n        fetchData();\n    }, [user]);\n\n    return ( \n        <>\n        { lists ? (\n        <div className='container mt-4 mx-auto'>\n            <h1>Explore Lists!</h1>\n           <ul class='list-group list-group-flush w-50 p-3'>\n                {lists.map(list => (\n                    <a href={'/list-detail/' + list.id} className='list-group-item list-group-item-action'>{list.list_title}</a>\n                ))}\n            </ul>\n        </div>\n        ): null\n        }\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user,\n    lists: state.auth.lists\n})\n\n\nexport default connect(mapStateToProps, {checkAuthenticated, load_user})(Explore);","/Users/justincho/Desktop/topthreedeploy/src/containers/EditListPage.js",["131"],"import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { create_list } from '../actions/lists';\nimport { checkAuthenticated, load_user } from '../actions/auth';\nimport { update_list } from '../actions/lists';\nimport axios from 'axios';\n\nconst EditListPage = (props) => {\n    const [formData, setFormData] = useState({\n        'list_title':'',\n        'list_entry_1': '',\n        'list_entry_1_desc': '',\n        'list_entry_2': '',\n        'list_entry_2_desc': '',\n        'list_entry_3': '',\n        'list_entry_3_desc': ''\n    })\n    const [list, setList] = useState();\n    const [listUpdated, setListUpdated] = useState(false);\n\n    const { \n        list_title, \n        list_entry_1, \n        list_entry_1_desc,\n        list_entry_2,\n        list_entry_2_desc,\n        list_entry_3,\n        list_entry_3_desc } = formData\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `JWT ${localStorage.getItem('access')}`,\n                    'Accept': 'application/json'\n                }\n            }\n\n            try {\n                const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/lists/${props.match.params.id}/`, config);\n                console.log(res.data);\n                setList(res.data);\n                setFormData({\n                    'list_title': res.data.list_title,\n                    'list_entry_1': res.data.list_entry_1,\n                    'list_entry_1_desc': res.data.list_entry_1_desc,\n                    'list_entry_2': res.data.list_entry_2,\n                    'list_entry_2_desc': res.data.list_entry_2_desc, \n                    'list_entry_3': res.data.list_entry_3,\n                    'list_entry_3_desc': res.data.list_entry_3_desc\n                })\n            } catch (err) {\n\n            }\n        }\n        props.checkAuthenticated();\n        props.load_user();\n        fetchData();\n        if (!props.isAuthenticated) {\n            return <Redirect to='/login'/>\n        }\n        }, [])\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n    \n    const onSubmit = e => {\n        e.preventDefault();\n\n        const list_author = props.user.id\n        props.update_list(list.id, list_title, list_entry_1, list_entry_1_desc, list_entry_2,\n            list_entry_2_desc, list_entry_3, list_entry_3_desc, list_author);\n\n        setListUpdated(true);\n    }\n\n    if (listUpdated) {\n        console.log()\n        return <Redirect to={'/my-lists'}/>\n    }\n\n    return (\n        <div className='container mt-5'>\n        { list && props.user ? (\n        <>\n            <h1>Edit Your List!</h1>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='List Title*'\n                        name='list_title'\n                        value={list_title}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-row'>\n                    <div className='form-group col-md-6'>\n                        <input\n                            className='form-control'\n                            type='text'\n                            placeholder='Enter Your First Choice*'\n                            name='list_entry_1'\n                            value={list_entry_1}\n                            onChange={e => onChange(e)}\n                            required\n                        />\n                    </div>\n                        <div className='form-group col-md-6'>\n                        <textarea\n                            className='form-control'\n                            type='text'\n                            placeholder='Description 1'\n                            name='list_entry_1_desc'\n                            value={list_entry_1_desc}\n                            onChange={e => onChange(e)}\n                          \n                        />\n                    </div>\n                 </div>\n                 <div className='form-row'>\n                    <div className='form-group col-md-6'>\n                        <input\n                            className='form-control'\n                            type='text'\n                            placeholder='Enter Your Second Choice*'\n                            name='list_entry_2'\n                            value={list_entry_2}\n                            onChange={e => onChange(e)}\n                            required\n                        />\n                    </div>\n                        <div className='form-group col-md-6'>\n                        <textarea\n                            className='form-control'\n                            type='text'\n                            placeholder='Description 2'\n                            name='list_entry_2_desc'\n                            value={list_entry_2_desc}\n                            onChange={e => onChange(e)}\n                          \n                        />\n                    </div>\n                </div>\n                          <div className='form-row'>\n                    <div className='form-group col-md-6'>\n                        <input\n                            className='form-control'\n                            type='text'\n                            placeholder='Enter Your Third Choice*'\n                            name='list_entry_3'\n                            value={list_entry_3}\n                            onChange={e => onChange(e)}\n                            required\n                        />\n                    </div>\n                        <div className='form-group col-md-6'>\n                        <textarea\n                            className='form-control'\n                            type='text'\n                            placeholder='Description 3'\n                            name='list_entry_3_desc'\n                            value={list_entry_3_desc}\n                            onChange={e => onChange(e)}\n                    \n                        />\n                    </div>\n                </div>\n\n                <button className='btn btn-primary' type='submit'>Edit List</button>\n            </form>\n        </>\n        ): null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {checkAuthenticated, load_user, create_list, update_list})(EditListPage);","/Users/justincho/Desktop/topthreedeploy/src/containers/DeleteAccountPage.js",[],"/Users/justincho/Desktop/topthreedeploy/src/hoc/Layout.js",["132"],"import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated, load_user, googleAuthenticate } from '../actions/auth';\nimport queryString from 'query-string';\n\nconst Layout = (props) => {\n    let location = useLocation();\n\n    useEffect(() => {\n        const values = queryString.parse(location.search);\n        const state = values.state ? values.state : null;\n        const code = values.code ? values.code : null;\n\n        console.log('State: ' + state);\n        console.log('Code: ' + code);\n\n        if (state && code) {\n            props.googleAuthenticate(state, code)\n        } else {\n           props.checkAuthenticated();\n           props.load_user();\n        }\n    }, [location]);\n  \n  \n    return(  \n        <div>\n            <Navbar/>\n            {props.children}\n        </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n    user: state.auth.user\n})\n\nexport default connect(mapStateToProps, {checkAuthenticated, load_user, googleAuthenticate})(Layout);","/Users/justincho/Desktop/topthreedeploy/src/actions/lists.js",["133"],"import axios from 'axios';\nimport {\n    CREATE_LIST_SUCCESS,\n    CREATE_LIST_FAIL,\n    LOAD_USER_LISTS_SUCCESS,\n    LOAD_USER_LISTS_FAIL,\n    DELETE_LIST_SUCCESS,\n    DELETE_LIST_FAIL,\n    UPDATE_LIST_SUCCESS,\n    UPDATE_LIST_FAIL,\n    LOAD_LIST_OWNER_SUCCESS,\n    LOAD_LIST_OWNER_FAIL\n} from './types';\n\nexport const create_list = (\n    list_title, \n    list_entry_1,\n    list_entry_1_desc,\n    list_entry_2,\n    list_entry_2_desc,\n    list_entry_3,\n    list_entry_3_desc,\n    list_author\n    ) => async dispatch => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        };\n\n        const body = JSON.stringify({ list_title, list_entry_1, list_entry_1_desc, list_entry_2, \n        list_entry_2_desc, list_entry_3, list_entry_3_desc, \"list_author\":Number(list_author)});\n\n        console.log(body);\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/lists/`, body, config)\n\n            dispatch({\n                type: CREATE_LIST_SUCCESS,\n                payload: res.data\n            })\n        } catch (err) {\n            dispatch({\n                type: CREATE_LIST_FAIL\n            })\n        }\n}\n\nexport const load_user_lists = (user_id) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\n            'Accept': 'application/json'\n        }\n    };\n\n    try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/lists/user/${user_id}/`, config)\n\n        dispatch({\n            type: LOAD_USER_LISTS_SUCCESS,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: LOAD_USER_LISTS_FAIL,\n        })\n    }\n\n\n}\n\nexport const delete_list = (list_id) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\n            'Accept': 'application/json'\n        }\n    };\n\n    try {\n        const res = await axios.delete(`${process.env.REACT_APP_API_URL}/api/lists/${list_id}/`);\n\n        dispatch({\n            type: DELETE_LIST_SUCCESS,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: DELETE_LIST_FAIL\n        })\n    }\n}\n\nexport const update_list = (list_id, list_title, list_entry_1, list_entry_2, list_entry_3, list_entry_1_desc, list_entry_2_desc, list_entry_3_desc, list_author) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\n            'Accept': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ list_title, list_entry_1, list_entry_1_desc, list_entry_2, \n    list_entry_2_desc, list_entry_3, list_entry_3_desc, \"list_author\":Number(list_author)});\n\n    try {\n        const res = await axios.patch(`${process.env.REACT_APP_API_URL}/api/lists/${list_id}/`, body, config);\n\n        dispatch({\n            type: UPDATE_LIST_SUCCESS,\n            payload: res.data\n        });\n\n    } catch (err) {\n        dispatch({\n            type: UPDATE_LIST_FAIL\n        })\n    }\n}\n\nexport const load_list_owner = (owner_id) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\n            'Accept': 'application/json'\n        }\n    }; \n\n    try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/lists/owner/${owner_id}/`, config);\n\n        dispatch({\n            type: LOAD_LIST_OWNER_SUCCESS,\n            payload: res.data\n        }); \n    } catch (err) {\n        dispatch({\n            type: LOAD_LIST_OWNER_FAIL\n        })\n    }\n}\n","/Users/justincho/Desktop/topthreedeploy/src/actions/auth.js",["134"],"import axios from 'axios';\nimport {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    LOGOUT,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL\n} from './types';\n\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        };\n\n        try {\n            const res = await axios.get(`${process.env.REACT_API_URL}/auth/users/me/`, config);\n\n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL\n            })\n        }\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }\n};\n\nexport const googleAuthenticate = (state, code) => async dispatch => {\n    if (state && code && !localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        };\n\n        const details = {\n            'state': state,\n            'code': code\n        };\n\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`, config);\n\n            dispatch({\n                type: GOOGLE_AUTH_SUCCESS,\n                payload: res.data\n            });\n\n            dispatch(load_user());\n        } catch (err) {\n            dispatch({\n                type: GOOGLE_AUTH_FAIL\n            })\n        }\n\n    }\n};\n\nexport const checkAuthenticated = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        };\n\n        const body = JSON.stringify({ token: localStorage.getItem('access')}); \n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\n\n            if (res.data.code !== 'token_not_valid') {\n                dispatch({\n                    type: AUTHENTICATED_SUCCESS\n                })\n            } else {\n                dispatch({\n                    type: AUTHENTICATED_FAIL\n                })\n            }\n\n        } catch (err) {\n            dispatch({\n                type: AUTHENTICATED_FAIL\n            })\n        }\n    } else {\n        dispatch({\n            type: AUTHENTICATED_FAIL\n        });\n    }\n}\n\n\nexport const login = (email, password) => async dispatch => {\n    console.log(\"LOGGIN IN!\")\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n    console.log(body)\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n        console.log(res.data);\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        }); \n\n        dispatch(load_user());\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n};\n\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ first_name, last_name, email, password, re_password });\n    console.log(body);\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\n\n        dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: res.data\n        }); \n\n    } catch (err) {\n        dispatch({\n            type: SIGNUP_FAIL\n        });\n    }\n};\n\nexport const verify = (uid, token) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ uid, token });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\n\n        dispatch({\n            type: ACTIVATION_SUCCESS,\n        }); \n\n    } catch (err) {\n        dispatch({\n            type: ACTIVATION_FAIL\n        });\n    }\n}\n\nexport const reset_password = (email) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email }); \n    console.log(body);\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_FAIL\n        });\n    }\n};\n\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_FAIL\n        });\n    }\n}\n\n\n\nexport const logout = () => dispatch => {\n    dispatch({\n        type: LOGOUT\n    })\n}\n\nexport const delete_user = (current_password) => async dispatch => {\n    const config = {\n        headers: {\n            \"Content-Type\": 'application/json',\n            \"Authorization\": `JWT ${localStorage.getItem('access')}`,\n            'Accept': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({\"current_password\": current_password});\n    console.log(body);\n    try {\n        const res = await axios.delete(`${process.env.REACT_APP_API_URL}/auth/users/me/`, body, config);\n        \n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: USER_DELETE_FAIL\n        })\n    }\n}","/Users/justincho/Desktop/topthreedeploy/src/components/Navbar.js",[],"/Users/justincho/Desktop/topthreedeploy/src/actions/types.js",[],"/Users/justincho/Desktop/topthreedeploy/src/reducers/index.js",[],"/Users/justincho/Desktop/topthreedeploy/src/reducers/lists.js",["135"],"import {\n    CREATE_LIST_SUCCESS,\n    CREATE_LIST_FAIL,\n    LOAD_USER_LISTS_SUCCESS,\n    LOAD_USER_LISTS_FAIL,\n    DELETE_LIST_SUCCESS,\n    DELETE_LIST_FAIL,\n    UPDATE_LIST_SUCCESS,\n    UPDATE_LIST_FAIL,\n    LOAD_LIST_OWNER_SUCCESS,\n    LOAD_LIST_OWNER_FAIL\n} from '../actions/types';\n\nconst initialState = {\n    lists: {},\n    selectedList: null, \n    listErrors: [],\n    listOwner: null\n}\n\nexport default function(state = initialState, action) {\n    const {type, payload} = action; \n\n    switch(type) {\n        case CREATE_LIST_SUCCESS:\n            return {\n                ...state,\n                selectedList: payload\n            }\n        case CREATE_LIST_FAIL:\n            return {\n                ...state, \n                listErrors: ['Failed to create list.']\n            }\n        case LOAD_USER_LISTS_SUCCESS:\n            return {\n                ...state,\n                lists: payload\n            }\n        case LOAD_USER_LISTS_FAIL:\n            return {\n                ...state,\n                listErrors: ['User lists retrieval failed.']\n            }\n        case DELETE_LIST_FAIL:\n            return {\n                ...state,\n                listErrors: ['List Delete Failed.']\n            }\n        case UPDATE_LIST_FAIL:\n            return {\n                ...state,\n                listErrors: ['List Update Failed.']\n            }\n        case LOAD_LIST_OWNER_SUCCESS:\n            return {\n                ...state, \n                listOwner: payload\n            }\n        case LOAD_LIST_OWNER_FAIL:\n            return {\n                ...state,\n            }\n        case UPDATE_LIST_SUCCESS:\n        case DELETE_LIST_SUCCESS:\n        default:\n            return state;\n    }\n}",["136","137"],"/Users/justincho/Desktop/topthreedeploy/src/reducers/auth.js",["138"],"import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    LOGOUT,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    USER_DELETE_FAIL,\n    USER_DELETE_SUCCESS\n} from '../actions/types'; \n\nconst initialState = {\n    access: localStorage.getItem('access'), \n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null,\n    notification: null\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    \n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh,\n                notification: null\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false,\n                notification: \"You've successfully created an account! Please check your email to activate your account to log in.\"\n\n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case GOOGLE_AUTH_SUCCESS:\n            localStorage.setItem('access', payload.access);\n\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case GOOGLE_AUTH_FAIL:\n        case LOGIN_FAIL:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null,\n                notification: \"Could not log in. Please check credentials and try again.\"\n            }\n        case SIGNUP_FAIL: \n            return {\n                ...state,\n                notification: \"An account already exists with this email. Please Log in.\"\n            }\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null\n            }\n        case USER_DELETE_SUCCESS:\n            return {\n                ...state,\n                notification: \"Successfully deleted user.\"\n            }\n        case USER_DELETE_FAIL:\n            return {\n                ...state,\n                notification: \"Incorrect password. Please try again.\"\n            }\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_SUCCESS:\n        case PASSWORD_RESET_CONFIRM_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case ACTIVATION_SUCCESS:\n        case ACTIVATION_FAIL:\n            return {\n                ...state\n            }\n        default:\n            return state;\n    }\n}",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":14,"column":8,"nodeType":"145","messageId":"146","endLine":14,"endColumn":25},{"ruleId":"147","severity":1,"message":"148","line":40,"column":33,"nodeType":"149","messageId":"150","endLine":40,"endColumn":35},{"ruleId":"147","severity":1,"message":"148","line":40,"column":105,"nodeType":"149","messageId":"150","endLine":40,"endColumn":107},{"ruleId":"143","severity":1,"message":"151","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"152","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"153","line":2,"column":16,"nodeType":"145","messageId":"146","endLine":2,"endColumn":27},{"ruleId":"143","severity":1,"message":"154","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":13},{"ruleId":"147","severity":1,"message":"148","line":68,"column":29,"nodeType":"149","messageId":"150","endLine":68,"endColumn":31},{"ruleId":"143","severity":1,"message":"155","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"156","line":8,"column":12,"nodeType":"145","messageId":"146","endLine":8,"endColumn":28},{"ruleId":"143","severity":1,"message":"157","line":8,"column":30,"nodeType":"145","messageId":"146","endLine":8,"endColumn":49},{"ruleId":"158","severity":1,"message":"159","line":32,"column":8,"nodeType":"160","endLine":32,"endColumn":14,"suggestions":"161"},{"ruleId":"143","severity":1,"message":"162","line":5,"column":31,"nodeType":"145","messageId":"146","endLine":5,"endColumn":40},{"ruleId":"158","severity":1,"message":"163","line":35,"column":8,"nodeType":"160","endLine":35,"endColumn":10,"suggestions":"164"},{"ruleId":"158","severity":1,"message":"163","line":41,"column":8,"nodeType":"160","endLine":41,"endColumn":14,"suggestions":"165"},{"ruleId":"147","severity":1,"message":"148","line":79,"column":39,"nodeType":"149","messageId":"150","endLine":79,"endColumn":41},{"ruleId":"158","severity":1,"message":"166","line":34,"column":12,"nodeType":"160","endLine":34,"endColumn":14,"suggestions":"167"},{"ruleId":"158","severity":1,"message":"159","line":31,"column":8,"nodeType":"160","endLine":31,"endColumn":14,"suggestions":"168"},{"ruleId":"158","severity":1,"message":"163","line":64,"column":12,"nodeType":"160","endLine":64,"endColumn":14,"suggestions":"169"},{"ruleId":"158","severity":1,"message":"163","line":25,"column":8,"nodeType":"160","endLine":25,"endColumn":18,"suggestions":"170"},{"ruleId":"143","severity":1,"message":"171","line":79,"column":11,"nodeType":"145","messageId":"146","endLine":79,"endColumn":17},{"ruleId":"143","severity":1,"message":"172","line":185,"column":15,"nodeType":"145","messageId":"146","endLine":185,"endColumn":18},{"ruleId":"173","severity":1,"message":"174","line":21,"column":1,"nodeType":"175","endLine":69,"endColumn":2},{"ruleId":"139","replacedBy":"176"},{"ruleId":"141","replacedBy":"177"},{"ruleId":"173","severity":1,"message":"174","line":31,"column":1,"nodeType":"175","endLine":129,"endColumn":2},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'DeleteAccountPage' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'selectedUserList' is assigned a value but never used.","'setSelectedUserList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkAuthenticated'. Either include it or remove the dependency array. If 'checkAuthenticated' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["180"],"'load_user' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["181"],["182"],"React Hook useEffect has missing dependencies: 'checkAuthenticated', 'isAuthenticated', and 'load_user'. Either include them or remove the dependency array. If 'checkAuthenticated' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["183"],["184"],["185"],["186"],"'config' is assigned a value but never used.","'res' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["178"],["179"],"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"187","fix":"195"},{"desc":"189","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [checkAuthenticated, user]",{"range":"199","text":"200"},"Update the dependencies array to be: [props]",{"range":"201","text":"202"},"Update the dependencies array to be: [list, props]",{"range":"203","text":"204"},"Update the dependencies array to be: [checkAuthenticated, isAuthenticated, load_user]",{"range":"205","text":"206"},{"range":"207","text":"200"},{"range":"208","text":"202"},"Update the dependencies array to be: [location, props]",{"range":"209","text":"210"},[1077,1083],"[checkAuthenticated, user]",[1191,1193],"[props]",[1306,1312],"[list, props]",[1029,1031],"[checkAuthenticated, isAuthenticated, load_user]",[994,1000],[2191,2193],[817,827],"[location, props]"]