[{"/Users/justincho/Desktop/topthreedeploy/src/index.js":"1","/Users/justincho/Desktop/topthreedeploy/src/App.js":"2","/Users/justincho/Desktop/topthreedeploy/src/store.js":"3","/Users/justincho/Desktop/topthreedeploy/src/containers/Login.js":"4","/Users/justincho/Desktop/topthreedeploy/src/containers/Home.js":"5","/Users/justincho/Desktop/topthreedeploy/src/containers/Signup.js":"6","/Users/justincho/Desktop/topthreedeploy/src/containers/Activate.js":"7","/Users/justincho/Desktop/topthreedeploy/src/containers/ResetPasswordConfirm.js":"8","/Users/justincho/Desktop/topthreedeploy/src/containers/ResetPassword.js":"9","/Users/justincho/Desktop/topthreedeploy/src/containers/UserLists.js":"10","/Users/justincho/Desktop/topthreedeploy/src/containers/ListDetail.js":"11","/Users/justincho/Desktop/topthreedeploy/src/containers/CreateList.js":"12","/Users/justincho/Desktop/topthreedeploy/src/containers/Explore.js":"13","/Users/justincho/Desktop/topthreedeploy/src/containers/EditListPage.js":"14","/Users/justincho/Desktop/topthreedeploy/src/containers/DeleteAccountPage.js":"15","/Users/justincho/Desktop/topthreedeploy/src/hoc/Layout.js":"16","/Users/justincho/Desktop/topthreedeploy/src/actions/lists.js":"17","/Users/justincho/Desktop/topthreedeploy/src/actions/auth.js":"18","/Users/justincho/Desktop/topthreedeploy/src/components/Navbar.js":"19","/Users/justincho/Desktop/topthreedeploy/src/actions/types.js":"20","/Users/justincho/Desktop/topthreedeploy/src/reducers/index.js":"21","/Users/justincho/Desktop/topthreedeploy/src/reducers/lists.js":"22","/Users/justincho/Desktop/topthreedeploy/src/reducers/auth.js":"23"},{"size":199,"mtime":1611189703437,"results":"24","hashOfConfig":"25"},{"size":2167,"mtime":1611189703406,"results":"26","hashOfConfig":"25"},{"size":388,"mtime":1611189703464,"results":"27","hashOfConfig":"25"},{"size":3403,"mtime":1611265812757,"results":"28","hashOfConfig":"25"},{"size":1409,"mtime":1611201428295,"results":"29","hashOfConfig":"25"},{"size":5564,"mtime":1611265874848,"results":"30","hashOfConfig":"25"},{"size":1208,"mtime":1611189703315,"results":"31","hashOfConfig":"25"},{"size":2151,"mtime":1611189703320,"results":"32","hashOfConfig":"25"},{"size":1446,"mtime":1611189703320,"results":"33","hashOfConfig":"25"},{"size":1676,"mtime":1611262118937,"results":"34","hashOfConfig":"25"},{"size":4419,"mtime":1611202761808,"results":"35","hashOfConfig":"25"},{"size":5572,"mtime":1611189703315,"results":"36","hashOfConfig":"25"},{"size":1682,"mtime":1611263817016,"results":"37","hashOfConfig":"25"},{"size":6872,"mtime":1611206302126,"results":"38","hashOfConfig":"25"},{"size":2031,"mtime":1611189703316,"results":"39","hashOfConfig":"25"},{"size":1426,"mtime":1611269120740,"results":"40","hashOfConfig":"25"},{"size":4055,"mtime":1611208047258,"results":"41","hashOfConfig":"25"},{"size":6837,"mtime":1611203651612,"results":"42","hashOfConfig":"25"},{"size":3062,"mtime":1611270028415,"results":"43","hashOfConfig":"25"},{"size":1620,"mtime":1611189703268,"results":"44","hashOfConfig":"25"},{"size":154,"mtime":1611189703375,"results":"45","hashOfConfig":"25"},{"size":1711,"mtime":1611189703380,"results":"46","hashOfConfig":"25"},{"size":3698,"mtime":1611189703374,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"11cnojx",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},"/Users/justincho/Desktop/topthreedeploy/src/index.js",[],["101","102"],"/Users/justincho/Desktop/topthreedeploy/src/App.js",["103"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport Activate from './containers/Activate';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\nimport CreateList from './containers/CreateList';\nimport UserLists from './containers/UserLists';\nimport ListDetail from './containers/ListDetail';\nimport EditListPage from './containers/EditListPage';\nimport Explore from './containers/Explore';\nimport DeleteAccountPage from './containers/DeleteAccountPage';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Layout from './hoc/Layout';\nconst App = () => (\n    <Provider store={store}>\n        <Router>\n            <Layout>\n                <Switch>\n                    <Route exact path='/' component={Home}></Route>\n                    <Route exact path='/login' component={Login}></Route>\n                    <Route exact path='/signup' component={Signup}></Route>\n                    <Route exact path='/activate/:uid/:token' component={Activate}></Route>\n                    <Route exact path='/password-reset' component={ResetPassword}></Route>\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm}></Route>\n                    <Route exact path='/create-list' component={CreateList}></Route>\n                    <Route exact path='/my-lists' component={UserLists}></Route>\n                    <Route exact path='/list-detail/:id' component={ListDetail}></Route>\n                    <Route exact path='/list-edit/:id' component={EditListPage}></Route>\n                    <Route exact path='/explore' component={Explore}></Route>\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>\n);\n\nexport default App;\n\n// 'PASSWORD_RESET_CONFIRM_URL': 'password/reset/confirm/{uid}/{token}',\n//     'USERNAME_RESET_CONFIRM_URL': 'email/reset/confirm/{uid}/{token}',\n//     'ACTIVATION_URL': 'activate/{uid}/{token}',","/Users/justincho/Desktop/topthreedeploy/src/store.js",[],"/Users/justincho/Desktop/topthreedeploy/src/containers/Login.js",["104","105"],"/Users/justincho/Desktop/topthreedeploy/src/containers/Home.js",["106","107","108","109"],"/Users/justincho/Desktop/topthreedeploy/src/containers/Signup.js",["110"],"/Users/justincho/Desktop/topthreedeploy/src/containers/Activate.js",["111"],"import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { verify } from '../actions/auth';\n\n\nconst Activate = ({ match ,verify }) => {\n    const [verified, setVerified] = useState(false);\n\n    const verify_account = (e) => {\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        verify(uid, token); \n        setVerified(true);//function from actions\n    } \n\n    if (verified) {\n        return <Redirect to='/'/>\n    }\n\n    return (\n        <div className='container mt-5'>\n           <div className='d-flex flex-column justify-content-center align-items-center'\n           style={{ marginTop: '200px'}}>\n               <h1>Verify your Account:</h1>\n               <button\n                onClick={verify_account}\n                style={{ marginTop: \"50px\"}}\n                type='button'\n                className='btn btn-primary'\n               >\n                   Verify\n               </button>\n           </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {verify})(Activate);","/Users/justincho/Desktop/topthreedeploy/src/containers/ResetPasswordConfirm.js",[],"/Users/justincho/Desktop/topthreedeploy/src/containers/ResetPassword.js",[],"/Users/justincho/Desktop/topthreedeploy/src/containers/UserLists.js",["112","113","114"],"/Users/justincho/Desktop/topthreedeploy/src/containers/ListDetail.js",["115","116","117","118"],"/Users/justincho/Desktop/topthreedeploy/src/containers/CreateList.js",["119"],"import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { create_list } from '../actions/lists';\nimport { checkAuthenticated, load_user } from '../actions/auth';\n\nconst CreateList = ({ isAuthenticated, user, create_list, checkAuthenticated, load_user }) => {\n    const [formData, setFormData] = useState({\n        'list_title':'',\n        'list_entry_1': '',\n        'list_entry_1_desc': '',\n        'list_entry_2': '',\n        'list_entry_2_desc': '',\n        'list_entry_3': '',\n        'list_entry_3_desc': ''\n    })\n    const [listCreated, setListCreated] = useState(false);\n\n    const { \n        list_title, \n        list_entry_1, \n        list_entry_1_desc,\n        list_entry_2,\n        list_entry_2_desc,\n        list_entry_3,\n        list_entry_3_desc } = formData\n\n    useEffect(() => {\n        checkAuthenticated();\n        load_user();\n        if (!isAuthenticated) {\n            return <Redirect to='/login'/>\n        }\n        }, [])\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n    \n    const onSubmit = e => {\n        e.preventDefault();\n        console.log(user.id)\n        const list_author = user.id\n\n        create_list(list_title, list_entry_1,list_entry_1_desc, list_entry_2, list_entry_2_desc, list_entry_3, list_entry_3_desc, list_author);\n        setListCreated(true);\n        \n    }\n\n    if (listCreated) {\n        return <Redirect to='/my-lists'/>\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Make a List!</h1>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='List Title*'\n                        name='list_title'\n                        value={list_title}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-row'>\n                    <div className='form-group col-md-6'>\n                        <input\n                            className='form-control'\n                            type='text'\n                            placeholder='Enter Your First Choice*'\n                            name='list_entry_1'\n                            value={list_entry_1}\n                            onChange={e => onChange(e)}\n                            required\n                        />\n                    </div>\n                        <div className='form-group col-md-6'>\n                        <textarea\n                            className='form-control'\n                            type='text'\n                            placeholder='Description 1'\n                            name='list_entry_1_desc'\n                            value={list_entry_1_desc}\n                            onChange={e => onChange(e)}\n                          \n                        />\n                    </div>\n                 </div>\n                 <div className='form-row'>\n                    <div className='form-group col-md-6'>\n                        <input\n                            className='form-control'\n                            type='text'\n                            placeholder='Enter Your Second Choice*'\n                            name='list_entry_2'\n                            value={list_entry_2}\n                            onChange={e => onChange(e)}\n                            required\n                        />\n                    </div>\n                        <div className='form-group col-md-6'>\n                        <textarea\n                            className='form-control'\n                            type='text'\n                            placeholder='Description 2'\n                            name='list_entry_2_desc'\n                            value={list_entry_2_desc}\n                            onChange={e => onChange(e)}\n                          \n                        />\n                    </div>\n                </div>\n                          <div className='form-row'>\n                    <div className='form-group col-md-6'>\n                        <input\n                            className='form-control'\n                            type='text'\n                            placeholder='Enter Your Third Choice*'\n                            name='list_entry_3'\n                            value={list_entry_3}\n                            onChange={e => onChange(e)}\n                            required\n                        />\n                    </div>\n                        <div className='form-group col-md-6'>\n                        <textarea\n                            className='form-control'\n                            type='text'\n                            placeholder='Description 3'\n                            name='list_entry_3_desc'\n                            value={list_entry_3_desc}\n                            onChange={e => onChange(e)}\n                    \n                        />\n                    </div>\n                </div>\n\n                <button className='btn btn-primary' type='submit'>Create List</button>\n            </form>\n      \n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {checkAuthenticated, load_user, create_list})(CreateList);","/Users/justincho/Desktop/topthreedeploy/src/containers/Explore.js",["120"],"/Users/justincho/Desktop/topthreedeploy/src/containers/EditListPage.js",["121"],"/Users/justincho/Desktop/topthreedeploy/src/containers/DeleteAccountPage.js",[],"/Users/justincho/Desktop/topthreedeploy/src/hoc/Layout.js",["122"],"/Users/justincho/Desktop/topthreedeploy/src/actions/lists.js",["123"],"/Users/justincho/Desktop/topthreedeploy/src/actions/auth.js",["124"],"/Users/justincho/Desktop/topthreedeploy/src/components/Navbar.js",[],"/Users/justincho/Desktop/topthreedeploy/src/actions/types.js",[],"/Users/justincho/Desktop/topthreedeploy/src/reducers/index.js",[],"/Users/justincho/Desktop/topthreedeploy/src/reducers/lists.js",["125"],"import {\n    CREATE_LIST_SUCCESS,\n    CREATE_LIST_FAIL,\n    LOAD_USER_LISTS_SUCCESS,\n    LOAD_USER_LISTS_FAIL,\n    DELETE_LIST_SUCCESS,\n    DELETE_LIST_FAIL,\n    UPDATE_LIST_SUCCESS,\n    UPDATE_LIST_FAIL,\n    LOAD_LIST_OWNER_SUCCESS,\n    LOAD_LIST_OWNER_FAIL\n} from '../actions/types';\n\nconst initialState = {\n    lists: {},\n    selectedList: null, \n    listErrors: [],\n    listOwner: null\n}\n\nexport default function(state = initialState, action) {\n    const {type, payload} = action; \n\n    switch(type) {\n        case CREATE_LIST_SUCCESS:\n            return {\n                ...state,\n                selectedList: payload\n            }\n        case CREATE_LIST_FAIL:\n            return {\n                ...state, \n                listErrors: ['Failed to create list.']\n            }\n        case LOAD_USER_LISTS_SUCCESS:\n            return {\n                ...state,\n                lists: payload\n            }\n        case LOAD_USER_LISTS_FAIL:\n            return {\n                ...state,\n                listErrors: ['User lists retrieval failed.']\n            }\n        case DELETE_LIST_FAIL:\n            return {\n                ...state,\n                listErrors: ['List Delete Failed.']\n            }\n        case UPDATE_LIST_FAIL:\n            return {\n                ...state,\n                listErrors: ['List Update Failed.']\n            }\n        case LOAD_LIST_OWNER_SUCCESS:\n            return {\n                ...state, \n                listOwner: payload\n            }\n        case LOAD_LIST_OWNER_FAIL:\n            return {\n                ...state,\n            }\n        case UPDATE_LIST_SUCCESS:\n        case DELETE_LIST_SUCCESS:\n        default:\n            return state;\n    }\n}","/Users/justincho/Desktop/topthreedeploy/src/reducers/auth.js",["126"],"import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    LOGOUT,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    USER_DELETE_FAIL,\n    USER_DELETE_SUCCESS\n} from '../actions/types'; \n\nconst initialState = {\n    access: localStorage.getItem('access'), \n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null,\n    notification: null\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    \n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh,\n                notification: null\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false,\n                notification: \"You've successfully created an account! Please check your email to activate your account to log in.\"\n\n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case GOOGLE_AUTH_SUCCESS:\n            localStorage.setItem('access', payload.access);\n\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case GOOGLE_AUTH_FAIL:\n        case LOGIN_FAIL:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null,\n                notification: \"Could not log in. Please check credentials and try again.\"\n            }\n        case SIGNUP_FAIL: \n            return {\n                ...state,\n                notification: \"An account already exists with this email. Please Log in.\"\n            }\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null\n            }\n        case USER_DELETE_SUCCESS:\n            return {\n                ...state,\n                notification: \"Successfully deleted user.\"\n            }\n        case USER_DELETE_FAIL:\n            return {\n                ...state,\n                notification: \"Incorrect password. Please try again.\"\n            }\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_SUCCESS:\n        case PASSWORD_RESET_CONFIRM_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case ACTIVATION_SUCCESS:\n        case ACTIVATION_FAIL:\n            return {\n                ...state\n            }\n        default:\n            return state;\n    }\n}",["127","128"],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":14,"column":8,"nodeType":"135","messageId":"136","endLine":14,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":40,"column":33,"nodeType":"139","messageId":"140","endLine":40,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":40,"column":105,"nodeType":"139","messageId":"140","endLine":40,"endColumn":107},{"ruleId":"133","severity":1,"message":"141","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"142","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"143","line":2,"column":16,"nodeType":"135","messageId":"136","endLine":2,"endColumn":27},{"ruleId":"133","severity":1,"message":"144","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":13},{"ruleId":"137","severity":1,"message":"138","line":68,"column":29,"nodeType":"139","messageId":"140","endLine":68,"endColumn":31},{"ruleId":"133","severity":1,"message":"145","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":14},{"ruleId":"133","severity":1,"message":"146","line":8,"column":12,"nodeType":"135","messageId":"136","endLine":8,"endColumn":28},{"ruleId":"133","severity":1,"message":"147","line":8,"column":30,"nodeType":"135","messageId":"136","endLine":8,"endColumn":49},{"ruleId":"148","severity":1,"message":"149","line":32,"column":8,"nodeType":"150","endLine":32,"endColumn":14,"suggestions":"151"},{"ruleId":"133","severity":1,"message":"152","line":5,"column":31,"nodeType":"135","messageId":"136","endLine":5,"endColumn":40},{"ruleId":"148","severity":1,"message":"153","line":35,"column":8,"nodeType":"150","endLine":35,"endColumn":10,"suggestions":"154"},{"ruleId":"148","severity":1,"message":"153","line":41,"column":8,"nodeType":"150","endLine":41,"endColumn":14,"suggestions":"155"},{"ruleId":"137","severity":1,"message":"138","line":79,"column":39,"nodeType":"139","messageId":"140","endLine":79,"endColumn":41},{"ruleId":"148","severity":1,"message":"156","line":34,"column":12,"nodeType":"150","endLine":34,"endColumn":14,"suggestions":"157"},{"ruleId":"148","severity":1,"message":"149","line":31,"column":8,"nodeType":"150","endLine":31,"endColumn":14,"suggestions":"158"},{"ruleId":"148","severity":1,"message":"153","line":64,"column":12,"nodeType":"150","endLine":64,"endColumn":14,"suggestions":"159"},{"ruleId":"148","severity":1,"message":"153","line":25,"column":8,"nodeType":"150","endLine":25,"endColumn":18,"suggestions":"160"},{"ruleId":"133","severity":1,"message":"161","line":79,"column":11,"nodeType":"135","messageId":"136","endLine":79,"endColumn":17},{"ruleId":"133","severity":1,"message":"162","line":185,"column":15,"nodeType":"135","messageId":"136","endLine":185,"endColumn":18},{"ruleId":"163","severity":1,"message":"164","line":21,"column":1,"nodeType":"165","endLine":69,"endColumn":2},{"ruleId":"163","severity":1,"message":"164","line":31,"column":1,"nodeType":"165","endLine":129,"endColumn":2},{"ruleId":"129","replacedBy":"166"},{"ruleId":"131","replacedBy":"167"},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'DeleteAccountPage' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'selectedUserList' is assigned a value but never used.","'setSelectedUserList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkAuthenticated'. Either include it or remove the dependency array. If 'checkAuthenticated' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["170"],"'load_user' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["171"],["172"],"React Hook useEffect has missing dependencies: 'checkAuthenticated', 'isAuthenticated', and 'load_user'. Either include them or remove the dependency array. If 'checkAuthenticated' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["173"],["174"],["175"],["176"],"'config' is assigned a value but never used.","'res' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["168"],["169"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"177","fix":"185"},{"desc":"179","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [checkAuthenticated, user]",{"range":"189","text":"190"},"Update the dependencies array to be: [props]",{"range":"191","text":"192"},"Update the dependencies array to be: [list, props]",{"range":"193","text":"194"},"Update the dependencies array to be: [checkAuthenticated, isAuthenticated, load_user]",{"range":"195","text":"196"},{"range":"197","text":"190"},{"range":"198","text":"192"},"Update the dependencies array to be: [location, props]",{"range":"199","text":"200"},[1082,1088],"[checkAuthenticated, user]",[1196,1198],"[props]",[1311,1317],"[list, props]",[1029,1031],"[checkAuthenticated, isAuthenticated, load_user]",[988,994],[2196,2198],[817,827],"[location, props]"]